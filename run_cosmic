#!/bin/bash

NUM_CARDS=`lspci | grep NVIDIA | grep VGA | wc -l`
LOC=`dirname $(readlink -f $0)`
TOKENS=(spring summer autumn winter)

function enable_all_cards() {
    if [[ $NUM_CARDS -gt 1 ]] ; then
        for i in $(seq 2 $NUM_CARDS) ; do
            mkdir -p card_$i
            j=$((i-1))
            echo "24 $j" > card_$i/0xbtc.conf
            cp card_1/cosmic_input card_$i/
        done
    fi
}

function run_on_card () {
    POOLS=(spring summer autumn winter)
    TOKEN_FILE="$LOC/card_$1/pool"
    PIDFILE="$LOC/card_$1/cosmic.pid"

    if [[ -e $PIDFILE ]] ; then
        CPID=`cat $PIDFILE`
        if [[ "$CPID" != "" ]] ; then
            comm=$(basename `ps -p $CPID -o command -h | cut -d\  -f2`)
            if [[ "$comm" == "cosmic_input" ]] ; then
                kill -15 $CPID
            fi
            rm $PIDFILE
        fi
    fi

    if [[ $# -eq 2 ]] ; then
        # with two arguments, we should switch pools before running
        if [[ " ${POOLS[*]} " =~ " ${2} " ]] ; then
            echo $2 > $TOKEN_FILE
        fi
    fi

    if [[ -e $TOKEN_FILE ]] ; then
        TOKEN=$(cat $TOKEN_FILE)
        $LOC/.sp $TOKEN >/dev/null
    else
        TOKEN=`$LOC/.sp | sed 's/Current mining pool is //g'`
        echo $TOKEN > $TOKEN_FILE
    fi

    CILOC="$LOC/card_$1/cosmic_input"
    TMUX_RUNNING=`tmux has-session -t cosmic >/dev/null 2>&1`
    if [[ $? -eq 1 ]] ; then
        tmux new-session -d -s cosmic -n card-$1 "$CILOC"
    else
        tmux new-window -d -t cosmic: -n card-$1 "$CILOC"
    fi
    echo "Mining $TOKEN token on card $1"
}

function usage() {
    COMM=`basename $0`
    if [[ $NUM_CARDS -lt 2 ]] ; then
        echo "usage: $COMM [spring|summer|autumn|winter]" 
    else
        echo "usage: $COMM [card number] [spring|summer|autumn|winter]" 
    fi
}


if [[ "$1" == "-h" ]] ; then
    usage
fi

enable_all_cards

`nvidia-smi >/dev/null 2>&1`
DRIVER_LOADED="$?"

if [[ $DRIVER_LOADED -gt 0 ]] ; then
    echo "NVIDIA driver could not be loaded." 
    exit
fi


if [[ $# -eq 0 ]] ; then
    # With no arguments, run on cosmic miner on all cards
    for i in $(seq 1 $NUM_CARDS) ; do
        run_on_card $i $2
    done
else
    if [[ $NUM_CARDS -lt 2 ]] ; then
        if [[ ! ${TOKENS[*]} =~ (^|[[:space:]])$1($|[[:space:]]) ]]; then
            usage
            exit
        fi
        run_on_card 1 $1
    else
        # If more than two cards, first arg must be a valid card number
        if [[ ! $1 =~ ^-?[0-9]+$ ]] ; then
            usage
            exit 1
        fi
        if [[ "$1" -gt "$NUM_CARDS" || $1 -lt 1 ]] ; then
            usage
            exit
        fi
        if [[ ! ${TOKENS[*]} =~ (^|[[:space:]])$2($|[[:space:]]) ]]; then
            usage
            exit
        fi
        run_on_card $1 $2
    fi
fi
