#!/bin/bash

NUM_CARDS=`lspci | grep NVIDIA | grep VGA | wc -l`
LOC=`dirname $(readlink -f $0)`

function is_pid_running() {
    if [[ $# -lt 2 ]] ; then
        return 2
    fi

    CPID=$1
    COSMIC_INSTANCES=`pgrep $2`
    for p in $COSMIC_INSTANCES ; do
        if [[ $p == $CPID ]] ; then
            return 0
        fi
    done
    return 1
}

function stop_miner_on_card() {
    CARD=$1
    PIDFILE="$LOC/card_$CARD/cosmic.pid"
    COSMIC_STOPPED=0

    if [[ ! -e $PIDFILE ]] ; then
        return 0
    fi

    p=`cat $PIDFILE`
    is_pid_running $p cosmic_input
    if [[ $? -eq 0 ]] ; then
        kill -15 $p 
        if [[ $? -eq 0 ]] ; then
            rm $PIDFILE
        fi
    else
        rm $PIDFILE
    fi
    return 1
}

function usage() {
    COMM=`basename $0`
    echo "usage: $COMM [card number]" 
}


if [[ $# -eq 0 ]] ; then
    # With no arguments, run on cosmic miner on all cards
    for i in $(seq 1 $NUM_CARDS) ; do
        stop_miner_on_card $i
    done
    # Do an emergency stop, just in case of bad behaviour
    killall -3 "cosmic_input cosmic-v3.4-linux" >/dev/null 2>&1
else
   # Ensure that first argument is an integer in the valid range
   if [[ ! $1 =~ ^-?[0-9]+$ ]] ; then
       usage
       exit
   fi

   # Ensure that first argument is less than or equal to number of cards
   if [[ "$1" -gt "$NUM_CARDS" || $1 -lt 1 ]] ; then
       usage
       exit
   fi
   stop_miner_on_card $1
fi
