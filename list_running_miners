#!/bin/bash
NUM_CARDS=`lspci | grep NVIDIA | grep VGA | wc -l`
LOC=`dirname $(readlink -f $0)`

function enable_all_cards() {
    if [[ $NUM_CARDS -gt 1 ]] ; then
        for i in $(seq 2 $NUM_CARDS) ; do
            mkdir -p $LOC/card_$i
            j=$((i-1))
            echo "24 $j" > $LOC/card_$i/0xbtc.conf
            cp $LOC/card_1/cosmic_input $LOC/card_$i/
        done
    fi
}

function is_pid_running() {
    if [[ $# -lt 2 ]] ; then
        return 2
    fi

    if [[ ! $1 =~ ^-?[0-9]+$ ]] ; then
        # don't allow non-integer pids
        return 2
    fi

    MYPID=$1
    if [[ -e $PIDFILE ]] ; then
        CPID=`cat $PIDFILE`
        if [[ ! $CPID =~ ^-?[0-9]+$ ]] ; then
            return 1
        fi

        COMM_FROM_PS=`ps -p $CPID -o command -h | cut -d\  -f2`
        if [[ $COMM_FROM_PS != "" ]] ; then
            comm=$(basename $COMM_FROM_PS)
            if [[ $comm == "$2" ]] ; then
                return 0
            else
                return 1
            fi
        fi
    fi
    return 1
}

function card_status() {
    if [[ $# -lt 1 ]] ; then
        return 2
    fi

    TOKEN_FILE="$LOC/card_$1/pool"
    PIDFILE="$LOC/card_$1/cosmic.pid"

    if [[ ! -e $PIDFILE ]] ; then
        return 1
    fi

    MYPID=`cat $PIDFILE`
    is_pid_running ${MYPID} cosmic_input
    PID_RUNNING=$?

    if [[ -e $TOKEN_FILE ]] ; then
       echo `cat $TOKEN_FILE`
    else 
       # fall back to the last mined token if we're not saving state
       echo `$LOC/.sp | sed 's/Current mining pool is //g'`
    fi

    return $PID_RUNNING
}

enable_all_cards

for i in $(seq 1 $NUM_CARDS) ; do
    CARD_STATUS=$(card_status $i)
    if [[ $? -eq 0 ]] ; then
        echo "Card $i: mining $CARD_STATUS"
    else
        echo "Card $i: not running"
    fi
done

